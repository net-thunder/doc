import{_ as a,c as s,a0 as t,o}from"./chunks/framework.nOBYma8F.js";const r="/assets/scene1.DgTt9JIw.jpeg",n="/assets/scene2.2DFbsSea.jpeg",c="/assets/scene3.C7BZib0F.jpeg",f=JSON.parse('{"title":"子公司A前端与子公司B后端联调","description":"","frontmatter":{},"headers":[],"relativePath":"doc/scene.md","filePath":"doc/scene.md"}'),i={name:"doc/scene.md"};function p(d,e,l,m,h,_){return o(),s("div",null,e[0]||(e[0]=[t('<h1 id="子公司a前端与子公司b后端联调" tabindex="-1">子公司A前端与子公司B后端联调 <a class="header-anchor" href="#子公司a前端与子公司b后端联调" aria-label="Permalink to &quot;子公司A前端与子公司B后端联调&quot;">​</a></h1><p><img src="'+r+'" alt="画板"></p><p>子公司A和子公司B本地启动node，根据controller分配的虚拟IP可以相互通信。</p><h1 id="机房a同步数据到机房b" tabindex="-1">机房A同步数据到机房B <a class="header-anchor" href="#机房a同步数据到机房b" aria-label="Permalink to &quot;机房A同步数据到机房B&quot;">​</a></h1><p><img src="'+n+'" alt="画板"></p><p>机房A和机房B部署mesh，本地启动node后可以同时访问两个机房的数据库。</p><h1 id="接入k8s网络开发" tabindex="-1">接入K8S网络开发 <a class="header-anchor" href="#接入k8s网络开发" aria-label="Permalink to &quot;接入K8S网络开发&quot;">​</a></h1><p><img src="'+c+'" alt="画板"></p><p>k8s中部署mesh，本地启动node可以直接访问k8s中的服务。</p>',9)]))}const u=a(i,[["render",p]]);export{f as __pageData,u as default};
